{
  "x-generator": "NSwag v13.3.0.0 (NJsonSchema v10.1.11.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "BoxOffice API",
    "version": "1.0.0"
  },
  "paths": {
    "/api/Order": {
      "post": {
        "tags": [
          "Order"
        ],
        "operationId": "Order_Create",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Session": {
      "post": {
        "tags": [
          "Session"
        ],
        "operationId": "Session_Create",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSessionCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Session"
        ],
        "operationId": "Session_Get",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionVm"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Session"
        ],
        "operationId": "Session_Update",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSessionCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Sessions": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "operationId": "Sessions_Get",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "month",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            },
            "x-position": 3
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 5
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionsVm"
                }
              }
            }
          }
        }
      }
    },
    "/api/Show": {
      "post": {
        "tags": [
          "Show"
        ],
        "operationId": "Show_Create",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateShowCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Show"
        ],
        "operationId": "Show_Get",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowsVm"
                }
              }
            }
          }
        }
      }
    },
    "/api/Show/{id}": {
      "put": {
        "tags": [
          "Show"
        ],
        "operationId": "Show_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateShowCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "CreateOrderCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "sessionId": {
            "type": "string",
            "format": "guid"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateSessionCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "showId": {
            "type": "string",
            "format": "guid"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "placesLimit": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SessionVm": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "freePlaces": {
            "type": "integer",
            "format": "int32"
          },
          "placesLimit": {
            "type": "integer",
            "format": "int32"
          },
          "showId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "UpdateSessionCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "placesLimit": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SessionsVm": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "list": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SessionDto"
            }
          }
        }
      },
      "SessionDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "showId": {
            "type": "string",
            "format": "guid"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "placesLimit": {
            "type": "integer",
            "format": "int32"
          },
          "show": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShowDto"
              }
            ]
          }
        }
      },
      "ShowDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateShowCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ShowsVm": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "list": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ShowsDto"
            }
          }
        }
      },
      "ShowsDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "sessions": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SessionDto2"
            }
          }
        }
      },
      "SessionDto2": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "placesLimit": {
            "type": "integer",
            "format": "int32"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UpdateShowCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "apiKey",
        "description": "Type into the textbox: Bearer {your JWT token}.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "JWT": []
    }
  ]
}